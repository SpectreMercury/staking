{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x444bE1263515a40531f8B9ae6a5a650df6ab16A9",
      "txHash": "0xbfb2828f031915ec42a8edcc85711ef5acde44b97914d9a7c84613b1c3f8248f",
      "kind": "uups"
    },
    {
      "address": "0xA6B4b6720D374e4768098e5B50Acd6fd2d370780",
      "txHash": "0xaf36019fbcf43007a2605d4a654d4434e64bc281f3315adb65ccf44758af05a4",
      "kind": "uups"
    },
    {
      "address": "0x80D735B51feA1436Ee30c0EbccBAb955Fd4eeE19",
      "txHash": "0xaa698bf6e864ef569700f3aa3d117f0724393e66d5a9b158bfa42f9c51c502a4",
      "kind": "uups"
    },
    {
      "address": "0x3213702DB57B5C685830fF12cC112E895F94707b",
      "txHash": "0xf73ebc28666b42038ca8edd6754b3d05807596c80a22497870cd31ab85893902",
      "kind": "uups"
    },
    {
      "address": "0xb446f3975C844433214ccc128fA9feb3Ce88a66A",
      "txHash": "0x40820057b427c82ff7a67a40f2714aeb8a8b58011cfaa6476eecbb9a3f742faf",
      "kind": "uups"
    },
    {
      "address": "0x6b484ea039971F339eaf8e533d8B26a38E19fb91",
      "txHash": "0x0c37b6027216809056256c3f81d08a3df537eb7c3f1efc28761d8c201b1a6285",
      "kind": "uups"
    },
    {
      "address": "0x6c390904c0cD4Af1e97D20f64281CC458eaCc203",
      "txHash": "0x295529432559b16f4b073bd31c74e580d1e015e7ac6ddf73a2aaebb8d7f5bb55",
      "kind": "uups"
    },
    {
      "address": "0x961D76681F69EF42DAB51Ef5C0aDa40D8772eBcd",
      "txHash": "0x1b4f315d84828c33b8a1c7b45e1e6070fcf7902e63813f018790938c6d955a2c",
      "kind": "uups"
    },
    {
      "address": "0xBb5cE0Bea5141ff12a9A8E6b6169459A21c22fF2",
      "txHash": "0x24181ed74b4317c01d36b0acaaa61f1b97cb30353031b4a273c03d1fc7f088de",
      "kind": "uups"
    },
    {
      "address": "0x872F3fE888995c4Cd6c2276cB166c2b1FF6a1b8a",
      "txHash": "0x3426131c45cf77f16ac3ac31830a3b269b4a8266af166a1dacae32319e51d0d8",
      "kind": "uups"
    },
    {
      "address": "0x1dbEf4f570Ae80f920057b98b3dC945062430689",
      "txHash": "0x6bf5ae5b7fd419e8aa3ee8298a96217be5e499210cdb06a9be0c684f47dd9205",
      "kind": "uups"
    },
    {
      "address": "0x7166FC1b9e1AeAD8B2Ff45AD28760204E42D46AB",
      "txHash": "0x91e83f474f39baab4ae8f756da7f11698b7c9e806dda9da4e0968b7654c37148",
      "kind": "uups"
    },
    {
      "address": "0x354cC80C0eA01C4fD062913a3EE0076Ba2d65783",
      "txHash": "0xae333e61dba78f3afd8e6f27cab53055c5a8ff39b3da1ee9f1c77cde82661f35",
      "kind": "uups"
    },
    {
      "address": "0x4cdfE3e5e1062Bf537e61f73bD1b93364EE9B49E",
      "txHash": "0x3ad15b2cb2b157b1f3e038050c7d41ca4de918effafa04205aead5e626b7179f",
      "kind": "uups"
    },
    {
      "address": "0xC5F9aD62485807AEfe16DCAFACA939A2a5D6e3E6",
      "txHash": "0xc494b85cdad736c6a6fba496ef51fbcbde285b4ce44966f1cef3a51c9a2db34a",
      "kind": "uups"
    },
    {
      "address": "0x06C369bbfC1f829aA4B279DcE2BaCDe7F426C333",
      "txHash": "0x25c761ea23c0652fb7681ed22fbbe93a2d6c97f55d91e2dc9b6bd7f1b63dab05",
      "kind": "uups"
    },
    {
      "address": "0xd41CEeEd9118B6C55D951E364d514D00413FD497",
      "txHash": "0x50c66f40249f63a6488f910f57b24e00d1160804577594820368389f569d70b7",
      "kind": "uups"
    },
    {
      "address": "0x03973a7814c0Fd55fadAEbE335beB573A274Dd7a",
      "txHash": "0xe67aa0c07e8864b035eaffe32c79bf8bcf613e1664403beb2154e148f15814ea",
      "kind": "uups"
    },
    {
      "address": "0x69E5092106530C9f27281B69d0B1bcf3556BA0ef",
      "txHash": "0xf4073c73f559a2857f94295b251142b4d1ba43bf27e922bc225b0b37942b2ef6",
      "kind": "uups"
    },
    {
      "address": "0x6edd7f1EF78D62dB893c267ccb539fACE6bb107e",
      "txHash": "0x5d00946c0240086b16c309a1f78acd73cf37a7ea880f5ba87aebb99b924a07fd",
      "kind": "uups"
    },
    {
      "address": "0x5F1Fb4212727f436E83A2923b43a6d00b62455F8",
      "txHash": "0xa624c3d47c32a858af4eb7740d8a6258f59fd260ee253bc8845df6d3360d7dec",
      "kind": "uups"
    }
  ],
  "impls": {
    "328411497e93087fc1bcf239319e5caadc4e2d1f2bb32e730e6285901956ea14": {
      "address": "0x5e799Abb7277871edfcC6b2d575dA3148d403B4E",
      "txHash": "0x44387078174262e00dae5f2d4d3ecf91d73538bba291aea0755d0afd201f4d63",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:16"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:36"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5940_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5934_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:63"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:66"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:68"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:71"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:75"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:79"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "64",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5940_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5934_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5934_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5940_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5934_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8bb10f566caeecce2eda9c5567114b98ebf033b69fc9531727f2af45a241e884": {
      "address": "0x6cDb7AdcBa6ec2F130C3C6d39188C223d8b07d56",
      "txHash": "0xb66f91a3edc49eca6bbe3e46a528c50b317c5d017de77a15e670504e9aa87f17",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:16"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:36"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5940_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5934_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:63"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:66"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:68"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:71"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:75"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:79"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "64",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5940_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5934_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5934_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5940_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5934_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ac44fbc938d5dfc56c3e554a2e07344dbc57260f31084d3d0c38d44d45e2b0b5": {
      "address": "0x8E4A8B0CF833276A7b8385226d3c6F89140f3735",
      "txHash": "0xe625dade9b3b6c46076b0520415d8bd287fbd3da9b0d985832383ad2f7fa786d",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:16"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:36"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5940_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5934_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:63"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:66"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:68"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:71"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:75"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:79"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "64",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5940_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5934_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5934_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5940_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5934_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ca5dbccd38fe2b119e3d4e82e01d5305ba83805ec8b39e5019ccda0abe9bde09": {
      "address": "0xc22494f7A0DcdC875F55cAfcBC91CcaB6DbBBa4E",
      "txHash": "0xda21e61228a4d3cbc688d8ce1013b68b5565e24c26e6d8ffa740af8d2bb9a727",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:13"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:19"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5943_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "67",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5943_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5937_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5943_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5937_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bfbaf1c7988dd37807a6621fb127dfa2853b6d7344dca2cfc9a703cd27f7b65d": {
      "address": "0x80B1BC5AA2fc1432eA15a28cAb6d884E37DB116C",
      "txHash": "0x489e7558817c0f79cd518963049f7a1d223114a9ba5caa405722ee7fd8ec35cb",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:13"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:19"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5943_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "67",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5943_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5937_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5943_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5937_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "407851835fc1cce858424eea1cdf7ad268894a020cd877b72d8138d6151a50c6": {
      "address": "0x655ecFd73e900219cA1170288bcde71Ec9161D87",
      "txHash": "0x0f85925d48fb4934ce63ed188eccffd30cc50c74bf3991f13d5541ae91a836cd",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:13"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:19"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5943_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "67",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5943_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5937_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5943_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5937_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3d957e91d857e3ffc813ba17c607d113e91412ec80297e968c1ea8ab41d61230": {
      "address": "0x37c071106E172BE775Bc406dFF5eF5FDDEBC61B6",
      "txHash": "0x3312c5ec6b84b493bf3f51c1ee9c4d168e21ae8a45a4bf9dae3214ba531a746b",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:13"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:19"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5943_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "67",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5943_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5937_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5943_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5937_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fb8f2159bce08d73dcc46d533c5e3a3b0337c6619039cb2f858bfcf6f3888d9c": {
      "address": "0x6C2B71B14eAD9667b55f9099b6A0Dfe77F3d9389",
      "txHash": "0xa454548fb46fb247fe0859f87210f43675e64e0bf907879d5d28ac670b7ab541",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:13"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:19"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5943_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "67",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5943_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5937_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5937_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5943_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5937_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "40b761186c6bbbae6426469a778eeb69790d05ed4a3c32232661255a99f79ed3": {
      "address": "0xdA1A9e26Da11104FA609c0bC9Dc0b894Ef719D54",
      "txHash": "0x320c9689c0c097c346a1c3243c25944e906c617dbcbbccc1486793befd9a9162",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:13"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "50",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:19"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_struct(LockOption)5953_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5947_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "57",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "60",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "61",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "67",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5953_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5947_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5947_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5953_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5947_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2da904325d62619bdaac36f397595342f1fd475394908fcccb40a87026d4f0ca": {
      "address": "0xCC0F3c380ff7EE7e74619B0Aff844E8C759B0eeb",
      "txHash": "0x47b70f1ba0c9287bdcb232db271190a03311d5f9325f7a4a112e45a47b3d63bb",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_struct(LockOption)5344_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "56",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "58",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5344_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5338_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5344_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5338_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9b89a0a26f1b2e8f1d59aa407c515dafdbe36f7e575fc43ca08700d0acecf3c0": {
      "address": "0x877d1D3ee8e06783A843c00022612725f15706E5",
      "txHash": "0x033fd39023c3858f4c6ab9747d138a1b5527a99bcbd5f3f61f240c598be40cba",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_struct(LockOption)5344_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "56",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "58",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5344_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5338_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5344_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5338_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "33cfad497017a8ba65f3117a78707830a6ecd3b8eea18a90c40e0cbff21436b0": {
      "address": "0x81BFF599FBf8F65715c7c83b0FeeC185e4Da1F88",
      "txHash": "0xd319be3fa118ec43ce4bc3b33fb7232505f357a6222dbb0e0fc589cc9089c139",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_struct(LockOption)5344_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "56",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "58",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5344_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5338_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5344_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5338_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "98c80d8794bc58534d5ba7a788d86aea1512556b87f3a4f0c3b4f81d1f77f8b0": {
      "address": "0x05fA8a8d19C242A73eF97E3998088c48a7EC9CB7",
      "txHash": "0x8fa1344a4fd9fdbea96ee138bd7413d6bcfff9c0b712245ee6aad8db51295a13",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)50_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_struct(LockOption)5344_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "56",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "58",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "59",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "_notEntered",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5344_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5338_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5338_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5344_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5338_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "01ffeb553df44f9b3af78bbbae57dbdb13cb6e971c8584c2fe70ea62bd3254d5": {
      "address": "0x56F4227774042920b201f693417Ab54b1eC5605B",
      "txHash": "0xe5b42518fd12cd7708247764018439b0757fb43819b75000def723a24e3f8347",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5326_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:54"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:56"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5326_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5320_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5326_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5320_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f93f5828e3293906b232011503787cca86eb2fa13a32ab22acedbe791d9cfd7b": {
      "address": "0xbAaA6dfbCCF2f1AFA4bb6248c5dB04d8F599b7F5",
      "txHash": "0x730514ba5c3be5db1477f53acc7fea6794bc6638d3bc3089ea39973ca80514e1",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5326_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:54"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:56"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5326_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5320_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5326_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5320_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "300de4488db2f68a005ee55756f42a62ca6de8bd0728fb9b490f3e8e4de4a62e": {
      "address": "0xEeEa36ADbF665BDcBFF9aEF1a87FA55b8592C9eB",
      "txHash": "0xfb8a0d60f6f5215e9ec673f9cc901e919ac47b912a4da76b8c668002b885da8d",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5326_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:54"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:56"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5326_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5320_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5326_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5320_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3799595729af9e4aec82bdc64bcb3250fdf030adc6b09f83f12a1ad2dae02630": {
      "address": "0xA3d89aC5407b352BC44015218fb9217742B82095",
      "txHash": "0x40d033d8b60f33c21a141aefbce7a013540033a73dcb5756ff32cf7126d2f595",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5326_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:54"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:56"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5326_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5320_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5320_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5326_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5320_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "eeef57575ce2edc138f498dc1c0827866c66b904cdb138cc5063388f083fece0": {
      "address": "0xfdD74d254d9A0A3210DFD56cc7c884153a266F3c",
      "txHash": "0xc4b53573f87ba6cfdd381a21a2cc4c11bc3e806aba4e17007e6fdf93dab59b1a",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5336_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5330_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:54"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:56"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5336_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5330_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5330_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5336_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5330_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "74646be62724424550d3884197cee847fb9602ed33c0dd2f60442c87e1393a30": {
      "address": "0x5bA5370da5739D958eA6BC2F3A5627987a653c40",
      "txHash": "0xf5d6c4b561fafb5ea5b70e17fbbeb2053e48abd08e39dd61b8878c9b29d3bde8",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:12"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:25"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5336_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5330_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:29"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:35"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:41"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:45"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:50"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:53"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:54"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:56"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:58"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5336_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5330_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5330_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5336_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5330_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "626ffc72460648afacbbbad06455047be885429013858561289eddfaa3127994": {
      "address": "0x52378183C18D6474674F9b5cE2BAe4a3B036f691",
      "txHash": "0xda87ffa99c9c20a3cd695093e86f0c35229ea174b2d4ff76b1d53c8f2a2d12ff",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:8"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:16"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:18"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:20"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5335_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5329_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:24"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:30"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "rewardReserve",
            "offset": 0,
            "slot": "58",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:36"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:40"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "62",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:46"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "_notEntered",
            "offset": 1,
            "slot": "65",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:51"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "66",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:58"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:474"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5335_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5329_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5329_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5335_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5329_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "36c1d543d620fea7d345c844b54ac76defd7b610949a7384fa1fc4edb1133b14": {
      "address": "0x94bea15d6aa70e2721bEbF4DfacAAF046aC53F30",
      "txHash": "0x1c3220b9311f0d1589e4e736f7e3405389ca4168d2a263a1dd536dad272ce3b3",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5352_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5346_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5352_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5346_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5346_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5352_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5346_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0c63a830a5c2fb03ac848518334e6045fd8360572461d843d2d346b2419e0804": {
      "address": "0x04D6A059feb4E617D05058b51Cbd6C8458130fE6",
      "txHash": "0xade01e22a344c94dcdcaec64954031c8b202dd6eb6e9a1ae671576374232da07",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5342_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5336_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5342_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5336_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5336_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5342_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5336_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c970a8a48446324129884e19e9cabc593d54859487767c4caab586f0a053a994": {
      "address": "0xa556db3265CFFFEE4D2793f4558Fc6D3Ad0a6636",
      "txHash": "0xc1f2e3bf64991e45a022d390674c30a790faacbce7be2634ffffaaff07660815",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5342_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5336_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5342_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5336_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5336_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5342_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5336_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1f52dfa37240f79e724254432e0a53027cb7328c1804e057406328979e062818": {
      "address": "0xbDd954d1Af60fAcA58849267e3a50CF2805174c0",
      "txHash": "0xb7485577e73c490832a510ee85466e91d1986948102d3b14b93e721454c3b5d8",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)7634_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)7634_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)7628_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)7634_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)7628_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c8fca2db8b928264cc0ed0fdec0f5314416989f3cd092dd73976e386087a6f83": {
      "address": "0x87Fe314b48e4eE16955297Ac87dAe66888d93F01",
      "txHash": "0x9fac489bedb456ef7c905ae0439ca4c0c312eac446f31ee02e2671ef3264bdf1",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)7634_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)7634_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)7628_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)7634_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)7628_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "652efdb98d8516fd695be2a953308ed3dd64c6034fb95bf6f4dba3126c274c82": {
      "address": "0x40FC161b74D0Ce536204886051dd658c311F7738",
      "txHash": "0x208e7a134ba787c87844829dee3f39b73e37d1d5eafe0d9e23fa4c2ded411ebd",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)7634_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)7634_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)7628_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)7634_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)7628_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3688171d642ec6ebea0c0e5f61f1d6ce954245939d431c6dbdbd4dbe145d2746": {
      "address": "0xD4eFa0f49E0910086E06049A4Cdc85035b3E1A76",
      "txHash": "0xbe5a72805ad8c3e250776ad3ac156a113691a90e0e0202ea037ce4ac29a72992",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)7634_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)7634_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)7628_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)7634_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)7628_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3aaf82addacc2eae7f9ecd1496a1e92cc3c48a450a5ac96c0bd5b60e1ca1fd35": {
      "address": "0x972cBDBa29dABCFb41Ad2AbdeA5F7434979c0CCc",
      "txHash": "0x2f9ea3a2bdc86ead0770487c4394267533782e15aba2f067215a6f5f5f1a8055",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)5342_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)5336_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2Staking",
            "src": "contracts/staking.sol:626"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)5342_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)5336_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)5336_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)5342_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)5336_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7094f43f36cc5102bdb951d5b34a5a87f58cebe0007da7d0c1707c12b1f03ef9": {
      "address": "0xadAc171e16f680Cc84878F89Fc632bbFD29569B6",
      "txHash": "0x296cba28e5c1794daf842f655f3b83cd53b9d9ce8028c1c4f25c50a5b057421c",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)7634_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)7634_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)7628_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)7634_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)7628_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0c1c4ae7e11c4db9440055001f7391a966e0b9a3955c7d2ba02923f3912e248b": {
      "address": "0xaaA6025a34c2768104b471B10c795db8cA818236",
      "txHash": "0x8e4f715c551a4caad6869a0b74e860b40eadba03e5bfd89c8d2b847b35bc9556",
      "layout": {
        "solcVersion": "0.8.27",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:15"
          },
          {
            "label": "minStakeAmount",
            "offset": 0,
            "slot": "48",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:21"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "49",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:22"
          },
          {
            "label": "nextPositionId",
            "offset": 0,
            "slot": "50",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:23"
          },
          {
            "label": "lockOptions",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(LockOption)7634_storage)dyn_storage",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:26"
          },
          {
            "label": "userPositions",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:27"
          },
          {
            "label": "userPositionCount",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:28"
          },
          {
            "label": "emergencyMode",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:31"
          },
          {
            "label": "positionOwner",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:32"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "56",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:33"
          },
          {
            "label": "pendingAdmin",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:34"
          },
          {
            "label": "userTotalStaked",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:37"
          },
          {
            "label": "totalPendingRewards",
            "offset": 0,
            "slot": "59",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:38"
          },
          {
            "label": "rewardPoolBalance",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:39"
          },
          {
            "label": "blacklisted",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:42"
          },
          {
            "label": "whitelisted",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:43"
          },
          {
            "label": "whitelistBonusRate",
            "offset": 0,
            "slot": "63",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:44"
          },
          {
            "label": "maxTotalStake",
            "offset": 0,
            "slot": "64",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:47"
          },
          {
            "label": "stakeEndTime",
            "offset": 0,
            "slot": "65",
            "type": "t_uint256",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:48"
          },
          {
            "label": "onlyWhitelistCanStake",
            "offset": 0,
            "slot": "66",
            "type": "t_bool",
            "contract": "StakingStorage",
            "src": "contracts/StakingStorage.sol:49"
          },
          {
            "label": "historicalTotalStaked",
            "offset": 0,
            "slot": "67",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:87"
          },
          {
            "label": "historicalRates",
            "offset": 0,
            "slot": "68",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:90"
          },
          {
            "label": "lastUpgradeTime",
            "offset": 0,
            "slot": "69",
            "type": "t_uint256",
            "contract": "Layer2StakingV2",
            "src": "contracts/Layer2StakingV2.sol:629"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(LockOption)7634_storage)dyn_storage": {
            "label": "struct IStaking.LockOption[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Position)7628_storage)dyn_storage": {
            "label": "struct IStaking.Position[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_array(t_struct(Position)7628_storage)dyn_storage)": {
            "label": "mapping(address => struct IStaking.Position[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(LockOption)7634_storage": {
            "label": "struct IStaking.LockOption",
            "members": [
              {
                "label": "period",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)7628_storage": {
            "label": "struct IStaking.Position",
            "members": [
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "lastRewardAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isUnstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
